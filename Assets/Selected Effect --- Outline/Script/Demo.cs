using UnityEngine;using System.Collections;using System.Collections.Generic;public class Demo : MonoBehaviour{	public Camera m_Camera;	public Material m_MatOutline;	private GameObject m_PrevMouseOn;	public Color m_OutlineColor = Color.green;	[Range(0f, 0.2f)] public float m_OutlineWidth = 0.08f;	public Color m_OverlayColor = Color.yellow;	[Range(0f, 0.6f)] public float m_Overlay = 0f;	public bool m_OverlayFlash = false;	[Range(1f, 6f)] public float m_OverlayFlashSpeed = 3f;	public bool m_OutlineOnly = false;	private Material m_BackupMaterial = null; 		void Start ()	{		QualitySettings.antiAliasing = 8;	}	void Update ()	{		if (Input.GetMouseButton (1))		{			RaycastHit hit;			Ray ray = m_Camera.ScreenPointToRay (Input.mousePosition);			if (Physics.Raycast (ray, out hit))			{				if (m_PrevMouseOn != hit.transform.gameObject)					OnSelectedGameObjectChange (m_PrevMouseOn, hit.transform.gameObject);				m_PrevMouseOn = hit.transform.gameObject;			}			else			{				OnSelectedGameObjectChange (m_PrevMouseOn, null);				m_PrevMouseOn = null;			}		}		if (m_PrevMouseOn && m_PrevMouseOn.name != "Plane")		{			if (m_OverlayFlash)			{				float curve = Mathf.Sin (Time.time * m_OverlayFlashSpeed) * 0.5f + 0.5f;				m_Overlay = curve * 0.6f;			}					MeshRenderer mr = m_PrevMouseOn.GetComponent<MeshRenderer>();			mr.material.SetTexture ("_MainTex", m_BackupMaterial.GetTexture ("_MainTex"));			mr.material.SetTextureOffset ("_MainTex", m_BackupMaterial.GetTextureOffset ("_MainTex"));			mr.material.SetTextureScale ("_MainTex", m_BackupMaterial.GetTextureScale ("_MainTex"));			mr.material.SetColor ("_OutlineColor", m_OutlineColor);			mr.material.SetColor ("_OverlayColor", m_OverlayColor);			mr.material.SetFloat ("_OutlineWidth", m_OutlineWidth);			mr.material.SetFloat ("_Overlay", m_Overlay);		}		if (m_OutlineOnly)			m_MatOutline.shader = Shader.Find ("Selected Effect --- Outline/Outline Only");		else			m_MatOutline.shader = Shader.Find ("Selected Effect --- Outline/Diffuse");	}	void OnSelectedGameObjectChange (GameObject prev, GameObject curr)	{		OutlineApply (prev, curr);	}	void OnGUI ()	{		GUI.Box (new Rect (10, 10, 260, 25), "Selected Effect --- Outline Demo");	}	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	void OutlineApply (GameObject prev, GameObject curr)	{		// revert prev to normal material		if (prev != null && prev.name != "Plane")		{			MeshRenderer mrprev = prev.GetComponent<MeshRenderer>();			mrprev.material = m_BackupMaterial;			m_BackupMaterial = null;		}			// replace current selected gameobject to wireframe material		if (curr != null && curr.name != "Plane")		{			MeshRenderer mr = curr.GetComponent<MeshRenderer>();			if (mr == null) return;			m_BackupMaterial = mr.material;			mr.material = m_MatOutline;		}	}}